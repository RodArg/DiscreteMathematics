<html>
    <head>
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <title>
            Algorithms
        </title>
    </head>

    <body>

<!--include menu.txt -->

        <h1 class="chap-title">
            Algorithms
        </h1>
            <div style="text-align:center">
                <figure class="lead-figure">
                    <img
                        src="https://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Sorting_quicksort_anim.gif/220px-Sorting_quicksort_anim.gif">
                </figure>
            </div>


            <details>
                <summary class="sum1">
                Algorithms 
                </summary>
            	<p>
                An <b>algorithm</b> is a finite sequence of precise instructions 
                for performing a computation or for solving a problem.
                </p>

                <p>
                Algorithm for finding the maximum (largest) value in a finite 
                sequence of integers:
                Solution Steps:
                </p>

                <ol>
                      	<li>
                        Set the temporary maximum equal to the first integer in 
                        the sequence.
                      	</li>
                      	<li>
                        Compare the next integer in the sequence to the temporary 
                        maximum, and if it is larger than the temporary maximum, set the 
                        temporary maximum equal to this integer.
                      	</li>
                      	<li>
                        Repeat the previous step if there are more integers in the
                        sequence.
                      	</li>
                      	<li>
                        Stop when there are no integers left in the sequence. 
                        The temporary maximum at this point is the largest integer in 
                        the sequence.
                        </li>
				</ol>
						<p>
                    	Properties of an Algorithm
                    	</p>
                <ol>
                    	<li>
                    	Input
                    	</li>
                    	<li>
                    	Output
                    	</li>
                    	<li>
                    	Definitiveness
                    	</li>
                    	<li>
                    	Correctness
                    	</li>
                    	<li>
                    	Finiteness
                    	</li>
                    	<li>
                    	Effectiveness
                    	</li>
                    	<li>
                    	Generality
                    	</li>
				</ol>
                	<details>
                	<summary class="sum2">
                	Searching Algorithm 
                	</summary>
                		<p>
                		The problem of locating an element in an ordered list occurs in 
                		many contexts. For instance, a program that checks the spelling of 
                		words searches for them in a dictionary, which is just an ordered 
                		list of words. Problems of this kind are called searching problems.
                		</p>
                		<details>
                		<summary class="sum3">
                		Linear Search
                		</summary>
                			&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                			<img src="https://www.tutorialspoint.com/data_structures_algorithms/images/linear_search.gif" 
                			alt="Linear Search Animation">
                			<p><b>procedure</b> <i>linear search(x</i>: integer, <i>a1, a2, .
                			 . . , an</i>: distinct integers)<br>
                			<i>i := 1</i><br>
                			<b>while</b> (i <= n and x != a[i] )<br>
                			&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                			i = i + 1<br>
							<b>if</b> i <= n <b>then</b> <i>location</i> := i<br>
							<b>else</b> <i>location =</i> 0<br>
							<b>return</b> <i>location{location</i> is the subscript of 
							the term that equals <i>x</i>, or is 0 if <i>x</i> is not found}
                			</p>
                		</details>
                		<details>
                		<summary class="sum3">
                		Binary Search
                		</summary>
                		<p>
                		This algorithm can be used when the list has terms occurring in 
                		order of increasing size (for instance: if the terms are numbers, 
                		they are listed from smallest to largest; if they are words, they 
                		are listed in lexicographic, or alphabetic, order). This second 
                		searching algorithm is called the binary search algorithm.
                		</p>
                		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                		<img 
                		src = "https://www.tutorialspoint.com/data_structures_algorithms/images/binary_search_0.jpg"><br>
                		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                		<img 
                		src = "https://www.tutorialspoint.com/data_structures_algorithms/images/binary_search_1.jpg"><br>
                		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                		<img
                		src = "https://www.tutorialspoint.com/data_structures_algorithms/images/binary_search_2.jpg"><br>
                		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                		<img 
                		src = "https://www.tutorialspoint.com/data_structures_algorithms/images/binary_search_3.jpg"><br>
                		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                		<img
                		src = "https://www.tutorialspoint.com/data_structures_algorithms/images/binary_search_4.jpg"><br>
                		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                		<img
                		src = "https://www.tutorialspoint.com/data_structures_algorithms/images/binary_search_5.jpg"><br>
                		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                		<img
                		src = "https://www.tutorialspoint.com/data_structures_algorithms/images/binary_search_6.jpg"><br>
                		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                
                		</details>
                	</details>
                	<details>
                	<summary class="sum2">
                	Sorting Algorithm
                	</summary>
                		<p></p>
                		<details>
                			<summary class="sum3">
                			Bubble Sort
                			</summary>
                			&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                			<img src="http://www.opentechguides.com/images/howto/howto_5101.png"><br>
                			&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                			<img src="/graphics/Bubble_sort.png"><br>
                		</details>
                		<details>
                			<summary class="sum3">
                			Insertion Sort
                			</summary>
                			&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                			<img src="https://www.tutorialspoint.com/data_structures_algorithms/images/unsorted_array.jpg"><br>
                			&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                			<img src="https://www.tutorialspoint.com/data_structures_algorithms/images/insertion_sort_1.jpg"><br>
                			&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                			<img src="https://www.tutorialspoint.com/data_structures_algorithms/images/insertion_sort_2.jpg"><br>
                			&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                			<img src="https://www.tutorialspoint.com/data_structures_algorithms/images/insertion_sort_3.jpg"><br>
                			&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                			<img src="https://www.tutorialspoint.com/data_structures_algorithms/images/insertion_sort_4.jpg"><br>
                			&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                			<img src="https://www.tutorialspoint.com/data_structures_algorithms/images/insertion_sort_5.jpg"><br>
                			&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                			<img src="https://www.tutorialspoint.com/data_structures_algorithms/images/insertion_sort_6.jpg"><br>
                			&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                			<img src="https://www.tutorialspoint.com/data_structures_algorithms/images/insertion_sort_7.jpg"><br>
                			&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                			<img src="https://www.tutorialspoint.com/data_structures_algorithms/images/insertion_sort_8.jpg"><br>
                			&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                			<img src="https://www.tutorialspoint.com/data_structures_algorithms/images/insertion_sort_9.jpg"><br>
                			&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                			<img src="https://www.tutorialspoint.com/data_structures_algorithms/images/insertion_sort_10.jpg"><br>
                			&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                			<img src="https://www.tutorialspoint.com/data_structures_algorithms/images/insertion_sort_11.jpg"><br>
                			&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                			<img src="https://www.tutorialspoint.com/data_structures_algorithms/images/insertion_sort_12.jpg"><br>
                			&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                			<img src="/graphics/Insertionsort.png"><br>
                		</details>
                	</details>
                	
                	<details>
                	<summary class="sum2">
                	Greedy Algorithm
                	</summary>
                	<p>
                	Algorithms that make what seems to be the best
					choice at each step are called <b>greedy algorithms.</b>
                	</p>
                	</details>
                	<details>
                	<summary class="sum2">
                	The Halting Problem
                	</summary>
                	</details>
                	
			</details>	
            <details>
                <summary class="sum1">
                The Growth of Functions 
                </summary>
                <details>
                <summary class="sum2">
                Big-O Notation
                </summary>
                </details>
                <details>
                <summary class="sum2">
                Big-O Estimates for Some Important Functions
                </summary>
                </details>
                <details>
                <summary class="sum2">
                The Growth of Combinations of Functions
                </summary>
                </details>
                <details>
                <summary class="sum2">
                Big-Omega and Big-Theta Notation
                </summary>
                </details>
                
            </details>
            <details>
                <summary class="sum1">
                Complexity of Algorithms 
                </summary>
                <details>
                <summary class="sum2">
                Time Complexity
                </summary>
                </details>
                <details>
                <summary class="sum2">
                Complexity of Matrix Multiplication
                </summary>
                </details>
                <details>
                <summary class="sum2">
                Algorithmic Paradigms
                </summary>
                </details>
                <details>
                <summary class="sum2">
                Understanding the Complexity of Algorithms
                </summary>
                </details>
            </details>


    </body>
</html>	


